// Code generated by thriftgo (0.3.13). DO NOT EDIT.

package paloservice

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type TPaloQueryOptions int64

const (
	TPaloQueryOptions_ABORT_ON_ERROR                  TPaloQueryOptions = 0
	TPaloQueryOptions_MAX_ERRORS                      TPaloQueryOptions = 1
	TPaloQueryOptions_DISABLE_CODEGEN                 TPaloQueryOptions = 2
	TPaloQueryOptions_BATCH_SIZE                      TPaloQueryOptions = 3
	TPaloQueryOptions_MEM_LIMIT                       TPaloQueryOptions = 4
	TPaloQueryOptions_NUM_NODES                       TPaloQueryOptions = 5
	TPaloQueryOptions_MAX_SCAN_RANGE_LENGTH           TPaloQueryOptions = 6
	TPaloQueryOptions_MAX_IO_BUFFERS                  TPaloQueryOptions = 7
	TPaloQueryOptions_NUM_SCANNER_THREADS             TPaloQueryOptions = 8
	TPaloQueryOptions_QUERY_TIMEOUT                   TPaloQueryOptions = 9
	TPaloQueryOptions_ALLOW_UNSUPPORTED_FORMATS       TPaloQueryOptions = 10
	TPaloQueryOptions_DEFAULT_ORDER_BY_LIMIT          TPaloQueryOptions = 11
	TPaloQueryOptions_DEBUG_ACTION                    TPaloQueryOptions = 12
	TPaloQueryOptions_ABORT_ON_DEFAULT_LIMIT_EXCEEDED TPaloQueryOptions = 13
	TPaloQueryOptions_IS_REPORT_SUCCESS               TPaloQueryOptions = 14
)

func (p TPaloQueryOptions) String() string {
	switch p {
	case TPaloQueryOptions_ABORT_ON_ERROR:
		return "ABORT_ON_ERROR"
	case TPaloQueryOptions_MAX_ERRORS:
		return "MAX_ERRORS"
	case TPaloQueryOptions_DISABLE_CODEGEN:
		return "DISABLE_CODEGEN"
	case TPaloQueryOptions_BATCH_SIZE:
		return "BATCH_SIZE"
	case TPaloQueryOptions_MEM_LIMIT:
		return "MEM_LIMIT"
	case TPaloQueryOptions_NUM_NODES:
		return "NUM_NODES"
	case TPaloQueryOptions_MAX_SCAN_RANGE_LENGTH:
		return "MAX_SCAN_RANGE_LENGTH"
	case TPaloQueryOptions_MAX_IO_BUFFERS:
		return "MAX_IO_BUFFERS"
	case TPaloQueryOptions_NUM_SCANNER_THREADS:
		return "NUM_SCANNER_THREADS"
	case TPaloQueryOptions_QUERY_TIMEOUT:
		return "QUERY_TIMEOUT"
	case TPaloQueryOptions_ALLOW_UNSUPPORTED_FORMATS:
		return "ALLOW_UNSUPPORTED_FORMATS"
	case TPaloQueryOptions_DEFAULT_ORDER_BY_LIMIT:
		return "DEFAULT_ORDER_BY_LIMIT"
	case TPaloQueryOptions_DEBUG_ACTION:
		return "DEBUG_ACTION"
	case TPaloQueryOptions_ABORT_ON_DEFAULT_LIMIT_EXCEEDED:
		return "ABORT_ON_DEFAULT_LIMIT_EXCEEDED"
	case TPaloQueryOptions_IS_REPORT_SUCCESS:
		return "IS_REPORT_SUCCESS"
	}
	return "<UNSET>"
}

func TPaloQueryOptionsFromString(s string) (TPaloQueryOptions, error) {
	switch s {
	case "ABORT_ON_ERROR":
		return TPaloQueryOptions_ABORT_ON_ERROR, nil
	case "MAX_ERRORS":
		return TPaloQueryOptions_MAX_ERRORS, nil
	case "DISABLE_CODEGEN":
		return TPaloQueryOptions_DISABLE_CODEGEN, nil
	case "BATCH_SIZE":
		return TPaloQueryOptions_BATCH_SIZE, nil
	case "MEM_LIMIT":
		return TPaloQueryOptions_MEM_LIMIT, nil
	case "NUM_NODES":
		return TPaloQueryOptions_NUM_NODES, nil
	case "MAX_SCAN_RANGE_LENGTH":
		return TPaloQueryOptions_MAX_SCAN_RANGE_LENGTH, nil
	case "MAX_IO_BUFFERS":
		return TPaloQueryOptions_MAX_IO_BUFFERS, nil
	case "NUM_SCANNER_THREADS":
		return TPaloQueryOptions_NUM_SCANNER_THREADS, nil
	case "QUERY_TIMEOUT":
		return TPaloQueryOptions_QUERY_TIMEOUT, nil
	case "ALLOW_UNSUPPORTED_FORMATS":
		return TPaloQueryOptions_ALLOW_UNSUPPORTED_FORMATS, nil
	case "DEFAULT_ORDER_BY_LIMIT":
		return TPaloQueryOptions_DEFAULT_ORDER_BY_LIMIT, nil
	case "DEBUG_ACTION":
		return TPaloQueryOptions_DEBUG_ACTION, nil
	case "ABORT_ON_DEFAULT_LIMIT_EXCEEDED":
		return TPaloQueryOptions_ABORT_ON_DEFAULT_LIMIT_EXCEEDED, nil
	case "IS_REPORT_SUCCESS":
		return TPaloQueryOptions_IS_REPORT_SUCCESS, nil
	}
	return TPaloQueryOptions(0), fmt.Errorf("not a valid TPaloQueryOptions string")
}

func TPaloQueryOptionsPtr(v TPaloQueryOptions) *TPaloQueryOptions { return &v }
func (p *TPaloQueryOptions) Scan(value interface{}) (err error) {
	var result sql.NullInt64
	err = result.Scan(value)
	*p = TPaloQueryOptions(result.Int64)
	return
}

func (p *TPaloQueryOptions) Value() (driver.Value, error) {
	if p == nil {
		return nil, nil
	}
	return int64(*p), nil
}
