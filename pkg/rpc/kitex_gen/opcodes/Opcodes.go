// Code generated by thriftgo (0.3.13). DO NOT EDIT.

package opcodes

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type TExprOpcode int64

const (
	TExprOpcode_INVALID_OPCODE             TExprOpcode = 0
	TExprOpcode_COMPOUND_NOT               TExprOpcode = 1
	TExprOpcode_COMPOUND_AND               TExprOpcode = 2
	TExprOpcode_COMPOUND_OR                TExprOpcode = 3
	TExprOpcode_CAST                       TExprOpcode = 4
	TExprOpcode_FILTER_IN                  TExprOpcode = 5
	TExprOpcode_FILTER_NOT_IN              TExprOpcode = 6
	TExprOpcode_FILTER_NEW_IN              TExprOpcode = 7
	TExprOpcode_FILTER_NEW_NOT_IN          TExprOpcode = 8
	TExprOpcode_EQ                         TExprOpcode = 9
	TExprOpcode_NE                         TExprOpcode = 10
	TExprOpcode_LT                         TExprOpcode = 11
	TExprOpcode_LE                         TExprOpcode = 12
	TExprOpcode_GT                         TExprOpcode = 13
	TExprOpcode_GE                         TExprOpcode = 14
	TExprOpcode_CONDITION_IF               TExprOpcode = 15
	TExprOpcode_CONDITION_NULLIF           TExprOpcode = 16
	TExprOpcode_CONDITION_IFNULL           TExprOpcode = 17
	TExprOpcode_CONDITION_COALESCE         TExprOpcode = 18
	TExprOpcode_TIMESTAMP_DATE_FORMAT      TExprOpcode = 19
	TExprOpcode_TIMESTAMP_DAYOFMONTH       TExprOpcode = 20
	TExprOpcode_TIMESTAMP_DAYOFYEAR        TExprOpcode = 21
	TExprOpcode_TIMESTAMP_DAYS_ADD         TExprOpcode = 22
	TExprOpcode_TIMESTAMP_DAYS_SUB         TExprOpcode = 23
	TExprOpcode_TIMESTAMP_DAY_NAME         TExprOpcode = 24
	TExprOpcode_TIMESTAMP_DIFF             TExprOpcode = 25
	TExprOpcode_TIMESTAMP_FROM_DAYS        TExprOpcode = 26
	TExprOpcode_TIMESTAMP_HOUR             TExprOpcode = 27
	TExprOpcode_TIMESTAMP_HOURS_ADD        TExprOpcode = 28
	TExprOpcode_TIMESTAMP_HOURS_SUB        TExprOpcode = 29
	TExprOpcode_TIMESTAMP_MICROSECOND      TExprOpcode = 30
	TExprOpcode_TIMESTAMP_MICROSECONDS_ADD TExprOpcode = 31
	TExprOpcode_TIMESTAMP_MICROSECONDS_SUB TExprOpcode = 32
	TExprOpcode_TIMESTAMP_MINUTE           TExprOpcode = 33
	TExprOpcode_TIMESTAMP_MINUTES_ADD      TExprOpcode = 34
	TExprOpcode_TIMESTAMP_MINUTES_SUB      TExprOpcode = 35
	TExprOpcode_TIMESTAMP_MONTH            TExprOpcode = 36
	TExprOpcode_TIMESTAMP_MONTHS_ADD       TExprOpcode = 37
	TExprOpcode_TIMESTAMP_MONTHS_SUB       TExprOpcode = 38
	TExprOpcode_TIMESTAMP_MONT_NAME        TExprOpcode = 39
	TExprOpcode_TIMESTAMP_NOW              TExprOpcode = 40
	TExprOpcode_TIMESTAMP_SECOND           TExprOpcode = 41
	TExprOpcode_TIMESTAMP_SECONDS_ADD      TExprOpcode = 42
	TExprOpcode_TIMESTAMP_SECONDS_SUB      TExprOpcode = 43
	TExprOpcode_TIMESTAMP_STR_TO_DATE      TExprOpcode = 44
	TExprOpcode_TIMESTAMP_TO_DATE          TExprOpcode = 45
	TExprOpcode_TIMESTAMP_TO_DAYS          TExprOpcode = 46
	TExprOpcode_TIMESTAMP_WEEKOFYEAR       TExprOpcode = 47
	TExprOpcode_TIMESTAMP_WEEKS_ADD        TExprOpcode = 48
	TExprOpcode_TIMESTAMP_WEEKS_SUB        TExprOpcode = 49
	TExprOpcode_TIMESTAMP_YEAR             TExprOpcode = 50
	TExprOpcode_TIMESTAMP_YEARS_ADD        TExprOpcode = 51
	TExprOpcode_TIMESTAMP_YEARS_SUB        TExprOpcode = 52
	TExprOpcode_ADD                        TExprOpcode = 53
	TExprOpcode_SUBTRACT                   TExprOpcode = 54
	TExprOpcode_MULTIPLY                   TExprOpcode = 55
	TExprOpcode_DIVIDE                     TExprOpcode = 56
	TExprOpcode_INT_DIVIDE                 TExprOpcode = 57
	TExprOpcode_MOD                        TExprOpcode = 58
	TExprOpcode_BITAND                     TExprOpcode = 59
	TExprOpcode_BITOR                      TExprOpcode = 60
	TExprOpcode_BITXOR                     TExprOpcode = 61
	TExprOpcode_BITNOT                     TExprOpcode = 62
	TExprOpcode_FACTORIAL                  TExprOpcode = 63
	TExprOpcode_LAST_OPCODE                TExprOpcode = 64
	TExprOpcode_EQ_FOR_NULL                TExprOpcode = 65
	TExprOpcode_RT_FILTER                  TExprOpcode = 66
	TExprOpcode_MATCH_ANY                  TExprOpcode = 67
	TExprOpcode_MATCH_ALL                  TExprOpcode = 68
	TExprOpcode_MATCH_PHRASE               TExprOpcode = 69
	TExprOpcode_MATCH_ELEMENT_EQ           TExprOpcode = 70
	TExprOpcode_MATCH_ELEMENT_LT           TExprOpcode = 71
	TExprOpcode_MATCH_ELEMENT_GT           TExprOpcode = 72
	TExprOpcode_MATCH_ELEMENT_LE           TExprOpcode = 73
	TExprOpcode_MATCH_ELEMENT_GE           TExprOpcode = 74
	TExprOpcode_MATCH_PHRASE_PREFIX        TExprOpcode = 75
	TExprOpcode_MATCH_REGEXP               TExprOpcode = 76
	TExprOpcode_MATCH_PHRASE_EDGE          TExprOpcode = 77
)

func (p TExprOpcode) String() string {
	switch p {
	case TExprOpcode_INVALID_OPCODE:
		return "INVALID_OPCODE"
	case TExprOpcode_COMPOUND_NOT:
		return "COMPOUND_NOT"
	case TExprOpcode_COMPOUND_AND:
		return "COMPOUND_AND"
	case TExprOpcode_COMPOUND_OR:
		return "COMPOUND_OR"
	case TExprOpcode_CAST:
		return "CAST"
	case TExprOpcode_FILTER_IN:
		return "FILTER_IN"
	case TExprOpcode_FILTER_NOT_IN:
		return "FILTER_NOT_IN"
	case TExprOpcode_FILTER_NEW_IN:
		return "FILTER_NEW_IN"
	case TExprOpcode_FILTER_NEW_NOT_IN:
		return "FILTER_NEW_NOT_IN"
	case TExprOpcode_EQ:
		return "EQ"
	case TExprOpcode_NE:
		return "NE"
	case TExprOpcode_LT:
		return "LT"
	case TExprOpcode_LE:
		return "LE"
	case TExprOpcode_GT:
		return "GT"
	case TExprOpcode_GE:
		return "GE"
	case TExprOpcode_CONDITION_IF:
		return "CONDITION_IF"
	case TExprOpcode_CONDITION_NULLIF:
		return "CONDITION_NULLIF"
	case TExprOpcode_CONDITION_IFNULL:
		return "CONDITION_IFNULL"
	case TExprOpcode_CONDITION_COALESCE:
		return "CONDITION_COALESCE"
	case TExprOpcode_TIMESTAMP_DATE_FORMAT:
		return "TIMESTAMP_DATE_FORMAT"
	case TExprOpcode_TIMESTAMP_DAYOFMONTH:
		return "TIMESTAMP_DAYOFMONTH"
	case TExprOpcode_TIMESTAMP_DAYOFYEAR:
		return "TIMESTAMP_DAYOFYEAR"
	case TExprOpcode_TIMESTAMP_DAYS_ADD:
		return "TIMESTAMP_DAYS_ADD"
	case TExprOpcode_TIMESTAMP_DAYS_SUB:
		return "TIMESTAMP_DAYS_SUB"
	case TExprOpcode_TIMESTAMP_DAY_NAME:
		return "TIMESTAMP_DAY_NAME"
	case TExprOpcode_TIMESTAMP_DIFF:
		return "TIMESTAMP_DIFF"
	case TExprOpcode_TIMESTAMP_FROM_DAYS:
		return "TIMESTAMP_FROM_DAYS"
	case TExprOpcode_TIMESTAMP_HOUR:
		return "TIMESTAMP_HOUR"
	case TExprOpcode_TIMESTAMP_HOURS_ADD:
		return "TIMESTAMP_HOURS_ADD"
	case TExprOpcode_TIMESTAMP_HOURS_SUB:
		return "TIMESTAMP_HOURS_SUB"
	case TExprOpcode_TIMESTAMP_MICROSECOND:
		return "TIMESTAMP_MICROSECOND"
	case TExprOpcode_TIMESTAMP_MICROSECONDS_ADD:
		return "TIMESTAMP_MICROSECONDS_ADD"
	case TExprOpcode_TIMESTAMP_MICROSECONDS_SUB:
		return "TIMESTAMP_MICROSECONDS_SUB"
	case TExprOpcode_TIMESTAMP_MINUTE:
		return "TIMESTAMP_MINUTE"
	case TExprOpcode_TIMESTAMP_MINUTES_ADD:
		return "TIMESTAMP_MINUTES_ADD"
	case TExprOpcode_TIMESTAMP_MINUTES_SUB:
		return "TIMESTAMP_MINUTES_SUB"
	case TExprOpcode_TIMESTAMP_MONTH:
		return "TIMESTAMP_MONTH"
	case TExprOpcode_TIMESTAMP_MONTHS_ADD:
		return "TIMESTAMP_MONTHS_ADD"
	case TExprOpcode_TIMESTAMP_MONTHS_SUB:
		return "TIMESTAMP_MONTHS_SUB"
	case TExprOpcode_TIMESTAMP_MONT_NAME:
		return "TIMESTAMP_MONT_NAME"
	case TExprOpcode_TIMESTAMP_NOW:
		return "TIMESTAMP_NOW"
	case TExprOpcode_TIMESTAMP_SECOND:
		return "TIMESTAMP_SECOND"
	case TExprOpcode_TIMESTAMP_SECONDS_ADD:
		return "TIMESTAMP_SECONDS_ADD"
	case TExprOpcode_TIMESTAMP_SECONDS_SUB:
		return "TIMESTAMP_SECONDS_SUB"
	case TExprOpcode_TIMESTAMP_STR_TO_DATE:
		return "TIMESTAMP_STR_TO_DATE"
	case TExprOpcode_TIMESTAMP_TO_DATE:
		return "TIMESTAMP_TO_DATE"
	case TExprOpcode_TIMESTAMP_TO_DAYS:
		return "TIMESTAMP_TO_DAYS"
	case TExprOpcode_TIMESTAMP_WEEKOFYEAR:
		return "TIMESTAMP_WEEKOFYEAR"
	case TExprOpcode_TIMESTAMP_WEEKS_ADD:
		return "TIMESTAMP_WEEKS_ADD"
	case TExprOpcode_TIMESTAMP_WEEKS_SUB:
		return "TIMESTAMP_WEEKS_SUB"
	case TExprOpcode_TIMESTAMP_YEAR:
		return "TIMESTAMP_YEAR"
	case TExprOpcode_TIMESTAMP_YEARS_ADD:
		return "TIMESTAMP_YEARS_ADD"
	case TExprOpcode_TIMESTAMP_YEARS_SUB:
		return "TIMESTAMP_YEARS_SUB"
	case TExprOpcode_ADD:
		return "ADD"
	case TExprOpcode_SUBTRACT:
		return "SUBTRACT"
	case TExprOpcode_MULTIPLY:
		return "MULTIPLY"
	case TExprOpcode_DIVIDE:
		return "DIVIDE"
	case TExprOpcode_INT_DIVIDE:
		return "INT_DIVIDE"
	case TExprOpcode_MOD:
		return "MOD"
	case TExprOpcode_BITAND:
		return "BITAND"
	case TExprOpcode_BITOR:
		return "BITOR"
	case TExprOpcode_BITXOR:
		return "BITXOR"
	case TExprOpcode_BITNOT:
		return "BITNOT"
	case TExprOpcode_FACTORIAL:
		return "FACTORIAL"
	case TExprOpcode_LAST_OPCODE:
		return "LAST_OPCODE"
	case TExprOpcode_EQ_FOR_NULL:
		return "EQ_FOR_NULL"
	case TExprOpcode_RT_FILTER:
		return "RT_FILTER"
	case TExprOpcode_MATCH_ANY:
		return "MATCH_ANY"
	case TExprOpcode_MATCH_ALL:
		return "MATCH_ALL"
	case TExprOpcode_MATCH_PHRASE:
		return "MATCH_PHRASE"
	case TExprOpcode_MATCH_ELEMENT_EQ:
		return "MATCH_ELEMENT_EQ"
	case TExprOpcode_MATCH_ELEMENT_LT:
		return "MATCH_ELEMENT_LT"
	case TExprOpcode_MATCH_ELEMENT_GT:
		return "MATCH_ELEMENT_GT"
	case TExprOpcode_MATCH_ELEMENT_LE:
		return "MATCH_ELEMENT_LE"
	case TExprOpcode_MATCH_ELEMENT_GE:
		return "MATCH_ELEMENT_GE"
	case TExprOpcode_MATCH_PHRASE_PREFIX:
		return "MATCH_PHRASE_PREFIX"
	case TExprOpcode_MATCH_REGEXP:
		return "MATCH_REGEXP"
	case TExprOpcode_MATCH_PHRASE_EDGE:
		return "MATCH_PHRASE_EDGE"
	}
	return "<UNSET>"
}

func TExprOpcodeFromString(s string) (TExprOpcode, error) {
	switch s {
	case "INVALID_OPCODE":
		return TExprOpcode_INVALID_OPCODE, nil
	case "COMPOUND_NOT":
		return TExprOpcode_COMPOUND_NOT, nil
	case "COMPOUND_AND":
		return TExprOpcode_COMPOUND_AND, nil
	case "COMPOUND_OR":
		return TExprOpcode_COMPOUND_OR, nil
	case "CAST":
		return TExprOpcode_CAST, nil
	case "FILTER_IN":
		return TExprOpcode_FILTER_IN, nil
	case "FILTER_NOT_IN":
		return TExprOpcode_FILTER_NOT_IN, nil
	case "FILTER_NEW_IN":
		return TExprOpcode_FILTER_NEW_IN, nil
	case "FILTER_NEW_NOT_IN":
		return TExprOpcode_FILTER_NEW_NOT_IN, nil
	case "EQ":
		return TExprOpcode_EQ, nil
	case "NE":
		return TExprOpcode_NE, nil
	case "LT":
		return TExprOpcode_LT, nil
	case "LE":
		return TExprOpcode_LE, nil
	case "GT":
		return TExprOpcode_GT, nil
	case "GE":
		return TExprOpcode_GE, nil
	case "CONDITION_IF":
		return TExprOpcode_CONDITION_IF, nil
	case "CONDITION_NULLIF":
		return TExprOpcode_CONDITION_NULLIF, nil
	case "CONDITION_IFNULL":
		return TExprOpcode_CONDITION_IFNULL, nil
	case "CONDITION_COALESCE":
		return TExprOpcode_CONDITION_COALESCE, nil
	case "TIMESTAMP_DATE_FORMAT":
		return TExprOpcode_TIMESTAMP_DATE_FORMAT, nil
	case "TIMESTAMP_DAYOFMONTH":
		return TExprOpcode_TIMESTAMP_DAYOFMONTH, nil
	case "TIMESTAMP_DAYOFYEAR":
		return TExprOpcode_TIMESTAMP_DAYOFYEAR, nil
	case "TIMESTAMP_DAYS_ADD":
		return TExprOpcode_TIMESTAMP_DAYS_ADD, nil
	case "TIMESTAMP_DAYS_SUB":
		return TExprOpcode_TIMESTAMP_DAYS_SUB, nil
	case "TIMESTAMP_DAY_NAME":
		return TExprOpcode_TIMESTAMP_DAY_NAME, nil
	case "TIMESTAMP_DIFF":
		return TExprOpcode_TIMESTAMP_DIFF, nil
	case "TIMESTAMP_FROM_DAYS":
		return TExprOpcode_TIMESTAMP_FROM_DAYS, nil
	case "TIMESTAMP_HOUR":
		return TExprOpcode_TIMESTAMP_HOUR, nil
	case "TIMESTAMP_HOURS_ADD":
		return TExprOpcode_TIMESTAMP_HOURS_ADD, nil
	case "TIMESTAMP_HOURS_SUB":
		return TExprOpcode_TIMESTAMP_HOURS_SUB, nil
	case "TIMESTAMP_MICROSECOND":
		return TExprOpcode_TIMESTAMP_MICROSECOND, nil
	case "TIMESTAMP_MICROSECONDS_ADD":
		return TExprOpcode_TIMESTAMP_MICROSECONDS_ADD, nil
	case "TIMESTAMP_MICROSECONDS_SUB":
		return TExprOpcode_TIMESTAMP_MICROSECONDS_SUB, nil
	case "TIMESTAMP_MINUTE":
		return TExprOpcode_TIMESTAMP_MINUTE, nil
	case "TIMESTAMP_MINUTES_ADD":
		return TExprOpcode_TIMESTAMP_MINUTES_ADD, nil
	case "TIMESTAMP_MINUTES_SUB":
		return TExprOpcode_TIMESTAMP_MINUTES_SUB, nil
	case "TIMESTAMP_MONTH":
		return TExprOpcode_TIMESTAMP_MONTH, nil
	case "TIMESTAMP_MONTHS_ADD":
		return TExprOpcode_TIMESTAMP_MONTHS_ADD, nil
	case "TIMESTAMP_MONTHS_SUB":
		return TExprOpcode_TIMESTAMP_MONTHS_SUB, nil
	case "TIMESTAMP_MONT_NAME":
		return TExprOpcode_TIMESTAMP_MONT_NAME, nil
	case "TIMESTAMP_NOW":
		return TExprOpcode_TIMESTAMP_NOW, nil
	case "TIMESTAMP_SECOND":
		return TExprOpcode_TIMESTAMP_SECOND, nil
	case "TIMESTAMP_SECONDS_ADD":
		return TExprOpcode_TIMESTAMP_SECONDS_ADD, nil
	case "TIMESTAMP_SECONDS_SUB":
		return TExprOpcode_TIMESTAMP_SECONDS_SUB, nil
	case "TIMESTAMP_STR_TO_DATE":
		return TExprOpcode_TIMESTAMP_STR_TO_DATE, nil
	case "TIMESTAMP_TO_DATE":
		return TExprOpcode_TIMESTAMP_TO_DATE, nil
	case "TIMESTAMP_TO_DAYS":
		return TExprOpcode_TIMESTAMP_TO_DAYS, nil
	case "TIMESTAMP_WEEKOFYEAR":
		return TExprOpcode_TIMESTAMP_WEEKOFYEAR, nil
	case "TIMESTAMP_WEEKS_ADD":
		return TExprOpcode_TIMESTAMP_WEEKS_ADD, nil
	case "TIMESTAMP_WEEKS_SUB":
		return TExprOpcode_TIMESTAMP_WEEKS_SUB, nil
	case "TIMESTAMP_YEAR":
		return TExprOpcode_TIMESTAMP_YEAR, nil
	case "TIMESTAMP_YEARS_ADD":
		return TExprOpcode_TIMESTAMP_YEARS_ADD, nil
	case "TIMESTAMP_YEARS_SUB":
		return TExprOpcode_TIMESTAMP_YEARS_SUB, nil
	case "ADD":
		return TExprOpcode_ADD, nil
	case "SUBTRACT":
		return TExprOpcode_SUBTRACT, nil
	case "MULTIPLY":
		return TExprOpcode_MULTIPLY, nil
	case "DIVIDE":
		return TExprOpcode_DIVIDE, nil
	case "INT_DIVIDE":
		return TExprOpcode_INT_DIVIDE, nil
	case "MOD":
		return TExprOpcode_MOD, nil
	case "BITAND":
		return TExprOpcode_BITAND, nil
	case "BITOR":
		return TExprOpcode_BITOR, nil
	case "BITXOR":
		return TExprOpcode_BITXOR, nil
	case "BITNOT":
		return TExprOpcode_BITNOT, nil
	case "FACTORIAL":
		return TExprOpcode_FACTORIAL, nil
	case "LAST_OPCODE":
		return TExprOpcode_LAST_OPCODE, nil
	case "EQ_FOR_NULL":
		return TExprOpcode_EQ_FOR_NULL, nil
	case "RT_FILTER":
		return TExprOpcode_RT_FILTER, nil
	case "MATCH_ANY":
		return TExprOpcode_MATCH_ANY, nil
	case "MATCH_ALL":
		return TExprOpcode_MATCH_ALL, nil
	case "MATCH_PHRASE":
		return TExprOpcode_MATCH_PHRASE, nil
	case "MATCH_ELEMENT_EQ":
		return TExprOpcode_MATCH_ELEMENT_EQ, nil
	case "MATCH_ELEMENT_LT":
		return TExprOpcode_MATCH_ELEMENT_LT, nil
	case "MATCH_ELEMENT_GT":
		return TExprOpcode_MATCH_ELEMENT_GT, nil
	case "MATCH_ELEMENT_LE":
		return TExprOpcode_MATCH_ELEMENT_LE, nil
	case "MATCH_ELEMENT_GE":
		return TExprOpcode_MATCH_ELEMENT_GE, nil
	case "MATCH_PHRASE_PREFIX":
		return TExprOpcode_MATCH_PHRASE_PREFIX, nil
	case "MATCH_REGEXP":
		return TExprOpcode_MATCH_REGEXP, nil
	case "MATCH_PHRASE_EDGE":
		return TExprOpcode_MATCH_PHRASE_EDGE, nil
	}
	return TExprOpcode(0), fmt.Errorf("not a valid TExprOpcode string")
}

func TExprOpcodePtr(v TExprOpcode) *TExprOpcode { return &v }
func (p *TExprOpcode) Scan(value interface{}) (err error) {
	var result sql.NullInt64
	err = result.Scan(value)
	*p = TExprOpcode(result.Int64)
	return
}

func (p *TExprOpcode) Value() (driver.Value, error) {
	if p == nil {
		return nil, nil
	}
	return int64(*p), nil
}
