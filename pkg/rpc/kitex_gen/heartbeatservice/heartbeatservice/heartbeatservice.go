// Code generated by Kitex v0.8.0. DO NOT EDIT.

package heartbeatservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	heartbeatservice "github.com/selectdb/ccr_syncer/pkg/rpc/kitex_gen/heartbeatservice"
)

func serviceInfo() *kitex.ServiceInfo {
	return heartbeatServiceServiceInfo
}

var heartbeatServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "HeartbeatService"
	handlerType := (*heartbeatservice.HeartbeatService)(nil)
	methods := map[string]kitex.MethodInfo{
		"heartbeat": kitex.NewMethodInfo(heartbeatHandler, newHeartbeatServiceHeartbeatArgs, newHeartbeatServiceHeartbeatResult, false),
	}
	extra := map[string]interface{}{
		"PackageName":     "heartbeatservice",
		"ServiceFilePath": `thrift/HeartbeatService.thrift`,
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.8.0",
		Extra:           extra,
	}
	return svcInfo
}

func heartbeatHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*heartbeatservice.HeartbeatServiceHeartbeatArgs)
	realResult := result.(*heartbeatservice.HeartbeatServiceHeartbeatResult)
	success, err := handler.(heartbeatservice.HeartbeatService).Heartbeat(ctx, realArg.MasterInfo)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newHeartbeatServiceHeartbeatArgs() interface{} {
	return heartbeatservice.NewHeartbeatServiceHeartbeatArgs()
}

func newHeartbeatServiceHeartbeatResult() interface{} {
	return heartbeatservice.NewHeartbeatServiceHeartbeatResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Heartbeat(ctx context.Context, masterInfo *heartbeatservice.TMasterInfo) (r *heartbeatservice.THeartbeatResult_, err error) {
	var _args heartbeatservice.HeartbeatServiceHeartbeatArgs
	_args.MasterInfo = masterInfo
	var _result heartbeatservice.HeartbeatServiceHeartbeatResult
	if err = p.c.Call(ctx, "heartbeat", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
